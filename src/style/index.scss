//https://stackoverflow.com/questions/29550422/css3-filter-performance-cpu-usage-why-do-certain-filters-tax-the-cpu
// for animations and transitions use translate instead of margin

//The variables will be needed to be imported first.
//This is because the other components will use the variables.
@import './style_components/variables';
@import './style_components/login_form';
@import './style_components/main_container';
@import './style_components/header_container';
@import './style_components/ticket_column';
@import './style_components/tab_line';
@import './style_components/primary_tab';
@import './style_components/template_container';
@import './style_components/footer';
@import './style_components/ticket_tab';
@import './style_components/main_nav';
@import './style_components/single_ticket';
@import './style_components/ticket_form';
@import './style_components/setup_page';
@import './style_components/my_account_page';
@import './style_components/animations';
@import './style_components//admin_page';
@import './style_components//edit_admin_content';
@import './style_components/ticket_info';
//Include the animation in the variable file on the top index so others can use it.
@include blinkclick;
@include popupmixin;
@include shake;


//The html has a default margin that you can deal with using
//the code below
body,html{
    margin:0;
    padding: 0;
    width:100%;
  }

//This is how to make the background of the whole website into a color
html{
      background-color: $siteBackgroundColor;
}




#main_container{
    //We will be using the grid display as it is becoming the standard
    //Just because we use grid does not mean we do not use flex-box
    //or other techniques. However, grid should be the default.
    display: grid;
 
    //1f is 1 fraction. We will use it to create columns of equal sizes.
    //Or make it so one column is proportionally bigger than others.
    //Use repeat so we can repeat the 1f without writing it all out.
    //grid-template-columns: repeat(5, 1f);

    ////We do the same thing but for rows:
    //grid-template-rows: repeat(5, 1f);

  
    //auto rows let us not define how many row, but just the height.
    //If we have both auto and template, then the auto will be a default.
    
    
    //// can be used with grid-area to define where each item should be
    //// The value would be a string
    //grid-template-areas:
    // "header header
    //  sidebar content";


   
}